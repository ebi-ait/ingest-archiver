from dataclasses import dataclass, field
from enum import Enum
from typing import List, Optional
from converter.ena.classes.sra_common import (
    AttributeType,
    LinkType,
    ObjectType,
    PlatformType,
    ProcessingType,
    RefObjectType,
    SpotDescriptorType,
    XrefType,
)


class LocusLocusName(Enum):
    """
    :cvar VALUE_16_S_R_RNA: Bacterial small subunit ribosomal RNA, a
        locus used for phylogenetic studies of bacteria and as a target
        for random target PCR in environmental biodiversity screening.
    :cvar VALUE_18_S_R_RNA: Eukaryotic small subunit ribosomal RNA, a
        locus used for phylogenetic studies of eukaryotes and as a
        target for random target PCR in environmental biodiversity
        screening.
    :cvar VALUE_28_S_R_RNA: Structural ribosomal RNA for the large
        component, or large subunit (LSU) of eukaryotic cytoplasmic
        ribosomes..
    :cvar RBCL: RuBisCO large subunit : ribulose-1,5-bisphosphate
        carboxylase/oxygenase large subunit, a locus used for
        phylogenetic studies of plants.
    :cvar MAT_K: Maturase K gene, a locus used for phylogenetic studies
        of plants.
    :cvar COX1: Mitochondrial cytochrome c oxidase 1 gene, a locus used
        for phylogenetic studies of animals
    :cvar ITS1_5_8_S_ITS2: Internal transcribed spacers 1 and 2 plus
        5.8S rRNA region, a locus used for phylogenetic studies of
        fungi.
    :cvar EXOME: All exonic regions of the genome.
    :cvar OTHER: Other locus, please describe.
    """
    VALUE_16_S_R_RNA = "16S rRNA"
    VALUE_18_S_R_RNA = "18S rRNA"
    VALUE_28_S_R_RNA = "28S rRNA"
    RBCL = "RBCL"
    MAT_K = "matK"
    COX1 = "COX1"
    ITS1_5_8_S_ITS2 = "ITS1-5.8S-ITS2"
    EXOME = "exome"
    OTHER = "other"


class TypeLibrarySelection(Enum):
    """
    Method used to enrich the target in the sequence library preparation.

    :cvar RANDOM: No Selection or Random selection
    :cvar PCR: target enrichment via PCR
    :cvar RANDOM_PCR: Source material was selected by randomly generated
        primers.
    :cvar RT_PCR: target enrichment via
    :cvar HMPR: Hypo-methylated partial restriction digest
    :cvar MF: Methyl Filtrated
    :cvar REPEAT_FRACTIONATION: Selection for less repetitive (and more
        gene rich) sequence through Cot filtration (CF) or other
        fractionation techniques based on DNA kinetics.
    :cvar SIZE_FRACTIONATION: Physical selection of size appropriate
        targets.
    :cvar MSLL: Methylation Spanning Linking Library
    :cvar C_DNA: PolyA selection or enrichment for messenger RNA (mRNA);
        synonymize with PolyA
    :cvar C_DNA_RANDOM_PRIMING:
    :cvar C_DNA_OLIGO_D_T:
    :cvar POLY_A: PolyA selection or enrichment for messenger RNA
        (mRNA); should replace cDNA enumeration.
    :cvar OLIGO_D_T: enrichment of messenger RNA (mRNA) by hybridization
        to Oligo-dT.
    :cvar INVERSE_R_RNA: depletion of ribosomal RNA by oligo
        hybridization.
    :cvar INVERSE_R_RNA_SELECTION: depletion of ribosomal RNA by inverse
        oligo hybridization.
    :cvar CH_IP: Chromatin immunoprecipitation
    :cvar CH_IP_SEQ: Chromatin immunoPrecipitation, reveals binding
        sites of specific proteins, typically transcription factors
        (TFs) using antibodies to extract DNA fragments bound to the
        target protein.
    :cvar MNASE: Identifies well-positioned nucleosomes. uses
        Micrococcal Nuclease (MNase) is an endo-exonuclease that
        processively digests DNA until an obstruction, such as a
        nucleosome, is reached.
    :cvar DNASE: DNase I endonuclease digestion and size selection
        reveals regions of chromatin where the DNA is highly sensitive
        to DNase I.
    :cvar HYBRID_SELECTION: Selection by hybridization in array or
        solution.
    :cvar REDUCED_REPRESENTATION: Reproducible genomic subsets, often
        generated by restriction fragment size selection, containing a
        manageable number of loci to facilitate re-sampling.
    :cvar RESTRICTION_DIGEST: DNA fractionation using restriction
        enzymes.
    :cvar VALUE_5_METHYLCYTIDINE_ANTIBODY: Selection of methylated DNA
        fragments using an antibody raised against 5-methylcytosine or
        5-methylcytidine (m5C).
    :cvar MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN: Enrichment by methyl-
        CpG binding domain.
    :cvar CAGE: Cap-analysis gene expression.
    :cvar RACE: Rapid Amplification of cDNA Ends.
    :cvar MDA: Multiple Displacement Amplification, a non-PCR based DNA
        amplification technique that amplifies a minute quantifies of
        DNA to levels suitable for genomic analysis.
    :cvar PADLOCK_PROBES_CAPTURE_METHOD: Targeted sequence capture
        protocol covering an arbitrary set of nonrepetitive genomics
        targets. An example is capture bisulfite sequencing using
        padlock probes (BSPP).
    :cvar OTHER: Other library enrichment, screening, or selection
        process.
    :cvar UNSPECIFIED: Library enrichment, screening, or selection is
        not specified.
    """
    RANDOM = "RANDOM"
    PCR = "PCR"
    RANDOM_PCR = "RANDOM PCR"
    RT_PCR = "RT-PCR"
    HMPR = "HMPR"
    MF = "MF"
    REPEAT_FRACTIONATION = "repeat fractionation"
    SIZE_FRACTIONATION = "size fractionation"
    MSLL = "MSLL"
    C_DNA = "cDNA"
    C_DNA_RANDOM_PRIMING = "cDNA_randomPriming"
    C_DNA_OLIGO_D_T = "cDNA_oligo_dT"
    POLY_A = "PolyA"
    OLIGO_D_T = "Oligo-dT"
    INVERSE_R_RNA = "Inverse rRNA"
    INVERSE_R_RNA_SELECTION = "Inverse rRNA selection"
    CH_IP = "ChIP"
    CH_IP_SEQ = "ChIP-Seq"
    MNASE = "MNase"
    DNASE = "DNase"
    HYBRID_SELECTION = "Hybrid Selection"
    REDUCED_REPRESENTATION = "Reduced Representation"
    RESTRICTION_DIGEST = "Restriction Digest"
    VALUE_5_METHYLCYTIDINE_ANTIBODY = "5-methylcytidine antibody"
    MBD2_PROTEIN_METHYL_CP_G_BINDING_DOMAIN = "MBD2 protein methyl-CpG binding domain"
    CAGE = "CAGE"
    RACE = "RACE"
    MDA = "MDA"
    PADLOCK_PROBES_CAPTURE_METHOD = "padlock probes capture method"
    OTHER = "other"
    UNSPECIFIED = "unspecified"


class TypeLibrarySource(Enum):
    """
    The LIBRARY_SOURCE specifies the type of source material that is being
    sequenced.

    :cvar GENOMIC: Genomic DNA (includes PCR products from genomic DNA).
    :cvar GENOMIC_SINGLE_CELL:
    :cvar TRANSCRIPTOMIC: Transcription products or non genomic DNA
        (EST, cDNA, RT-PCR, screened libraries).
    :cvar TRANSCRIPTOMIC_SINGLE_CELL:
    :cvar METAGENOMIC: Mixed material from metagenome.
    :cvar METATRANSCRIPTOMIC: Transcription products from community
        targets
    :cvar SYNTHETIC: Synthetic DNA.
    :cvar VIRAL_RNA: Viral RNA.
    :cvar OTHER: Other, unspecified, or unknown library source material.
    """
    GENOMIC = "GENOMIC"
    GENOMIC_SINGLE_CELL = "GENOMIC SINGLE CELL"
    TRANSCRIPTOMIC = "TRANSCRIPTOMIC"
    TRANSCRIPTOMIC_SINGLE_CELL = "TRANSCRIPTOMIC SINGLE CELL"
    METAGENOMIC = "METAGENOMIC"
    METATRANSCRIPTOMIC = "METATRANSCRIPTOMIC"
    SYNTHETIC = "SYNTHETIC"
    VIRAL_RNA = "VIRAL RNA"
    OTHER = "OTHER"


class TypeLibraryStrategy(Enum):
    """
    Sequencing technique intended for this library.

    :cvar WGS: Whole Genome Sequencing - random sequencing of the whole
        genome (see pubmed 10731132 for details)
    :cvar WGA: Whole Genome Amplification followed by random sequencing.
        (see pubmed 1631067,8962113 for details)
    :cvar WXS: Random sequencing of exonic regions selected from the
        genome. (see pubmed 20111037 for details)
    :cvar RNA_SEQ: Random sequencing of whole transcriptome, also known
        as Whole Transcriptome Shotgun Sequencing, or WTSS). (see pubmed
        18611170 for details)
    :cvar SS_RNA_SEQ: Strand-specific RNA sequencing.
    :cvar MI_RNA_SEQ: Micro RNA sequencing strategy designed to capture
        post-transcriptional RNA elements and include non-coding
        functional elements. (see pubmed 21787409 for details)
    :cvar NC_RNA_SEQ: Capture of other non-coding RNA types, including
        post-translation modification types such as snRNA (small nuclear
        RNA) or snoRNA (small nucleolar RNA), or expression regulation
        types such as siRNA (small interfering RNA) or piRNA/piwi/RNA
        (piwi-interacting RNA).
    :cvar FL_C_DNA: Full-length sequencing of cDNA templates
    :cvar EST: Single pass sequencing of cDNA templates
    :cvar HI_C: Chromosome Conformation Capture technique where a
        biotin-labeled nucleotide is incorporated at the ligation
        junction, enabling selective purification of chimeric DNA
        ligation junctions followed by deep sequencing.
    :cvar ATAC_SEQ: Assay for Transposase-Accessible Chromatin (ATAC)
        strategy is used to study genome-wide chromatin accessibility.
        alternative method to DNase-seq that uses an engineered Tn5
        transposase to cleave DNA and to integrate primer DNA sequences
        into the cleaved genomic DNA.
    :cvar WCS: Random sequencing of a whole chromosome or other replicon
        isolated from a genome.
    :cvar RAD_SEQ:
    :cvar CLONE: Genomic clone based (hierarchical) sequencing.
    :cvar POOLCLONE: Shotgun of pooled clones (usually BACs and
        Fosmids).
    :cvar AMPLICON: Sequencing of overlapping or distinct PCR or RT-PCR
        products. For example, metagenomic community profiling using SSU
        rRNA .
    :cvar CLONEEND: Clone end (5', 3', or both) sequencing.
    :cvar FINISHING: Sequencing intended to finish (close) gaps in
        existing coverage.
    :cvar CH_IP_SEQ: ChIP-seq, Chromatin ImmunoPrecipitation, reveals
        binding sites of specific proteins, typically transcription
        factors (TFs) using antibodies to extract DNA fragments bound to
        the target protein.
    :cvar MNASE_SEQ: Identifies well-positioned nucleosomes. uses
        Micrococcal Nuclease (MNase) is an endo-exonuclease that
        processively digests DNA until an obstruction, such as a
        nucleosome, is reached.
    :cvar DNASE_HYPERSENSITIVITY: Sequencing of hypersensitive sites, or
        segments of open chromatin that are more readily cleaved by
        DNaseI.
    :cvar BISULFITE_SEQ: MethylC-seq. Sequencing following treatment of
        DNA with bisulfite to convert cytosine residues to uracil
        depending on methylation status.
    :cvar CTS: Concatenated Tag Sequencing
    :cvar MRE_SEQ: Methylation-Sensitive Restriction Enzyme Sequencing.
    :cvar ME_DIP_SEQ: Methylated DNA Immunoprecipitation Sequencing.
    :cvar MBD_SEQ: Methyl CpG Binding Domain Sequencing.
    :cvar TN_SEQ: Quantitatively determine fitness of bacterial genes
        based on how many times a purposely seeded transposon gets
        inserted into each gene of a colony after some time.
    :cvar VALIDATION: CGHub special request: Independent experiment to
        re-evaluate putative variants.
    :cvar FAIRE_SEQ: Formaldehyde Assisted Isolation of Regulatory
        Elements. Reveals regions of open chromatin.
    :cvar SELEX: Systematic Evolution of Ligands by Exponential
        enrichment
    :cvar RIP_SEQ: Direct sequencing of RNA immunoprecipitates (includes
        CLIP-Seq, HITS-CLIP and PAR-CLIP).
    :cvar CH_IA_PET: Direct sequencing of proximity-ligated chromatin
        immunoprecipitates.
    :cvar SYNTHETIC_LONG_READ: binning and barcoding of large DNA
        fragments to facilitate assembly of the fragment
    :cvar TARGETED_CAPTURE: Enrichment of a targeted subset of loci.
    :cvar TETHERED_CHROMATIN_CONFORMATION_CAPTURE:
    :cvar NOME_SEQ: Nucleosome Occupancy and Methylome sequencing.
    :cvar CH_M_SEQ: ChIPmentation combines chromatin immunoprecipitation
        with sequencing library preparation by Tn5 transposase (see
        pubmed 26280331 for details)
    :cvar GBS: Genotyping by sequencing is a method to discover single
        nucleotide polymorphisms for genotyping studies.
    :cvar OTHER: Library strategy not listed.
    """
    WGS = "WGS"
    WGA = "WGA"
    WXS = "WXS"
    RNA_SEQ = "RNA-Seq"
    SS_RNA_SEQ = "ssRNA-seq"
    MI_RNA_SEQ = "miRNA-Seq"
    NC_RNA_SEQ = "ncRNA-Seq"
    FL_C_DNA = "FL-cDNA"
    EST = "EST"
    HI_C = "Hi-C"
    ATAC_SEQ = "ATAC-seq"
    WCS = "WCS"
    RAD_SEQ = "RAD-Seq"
    CLONE = "CLONE"
    POOLCLONE = "POOLCLONE"
    AMPLICON = "AMPLICON"
    CLONEEND = "CLONEEND"
    FINISHING = "FINISHING"
    CH_IP_SEQ = "ChIP-Seq"
    MNASE_SEQ = "MNase-Seq"
    DNASE_HYPERSENSITIVITY = "DNase-Hypersensitivity"
    BISULFITE_SEQ = "Bisulfite-Seq"
    CTS = "CTS"
    MRE_SEQ = "MRE-Seq"
    ME_DIP_SEQ = "MeDIP-Seq"
    MBD_SEQ = "MBD-Seq"
    TN_SEQ = "Tn-Seq"
    VALIDATION = "VALIDATION"
    FAIRE_SEQ = "FAIRE-seq"
    SELEX = "SELEX"
    RIP_SEQ = "RIP-Seq"
    CH_IA_PET = "ChIA-PET"
    SYNTHETIC_LONG_READ = "Synthetic-Long-Read"
    TARGETED_CAPTURE = "Targeted-Capture"
    TETHERED_CHROMATIN_CONFORMATION_CAPTURE = "Tethered Chromatin Conformation Capture"
    NOME_SEQ = "NOMe-Seq"
    CH_M_SEQ = "ChM-Seq"
    GBS = "GBS"
    OTHER = "OTHER"


@dataclass
class LibraryDescriptorType:
    """The LIBRARY_DESCRIPTOR specifies the origin of the material being
    sequenced and any treatments that the material might have undergone that
    affect the sequencing result.

    This specification is needed even if the platform does not require a
    library construction step per se.

    :ivar library_name: The submitter's name for this library.
    :ivar library_strategy:
    :ivar library_source:
    :ivar library_selection:
    :ivar library_layout: LIBRARY_LAYOUT specifies whether to expect
        single, paired, or other configuration of reads. In the case of
        paired reads, information about the relative distance and
        orientation is specified.
    :ivar targeted_loci:
    :ivar pooling_strategy: The optional pooling strategy indicates how
        the library or libraries are organized if multiple samples are
        involved.
    :ivar library_construction_protocol: Free form text describing the
        protocol by which the sequencing library was constructed.
    """
    library_name: Optional[str] = field(
        default=None,
        metadata={
            "name": "LIBRARY_NAME",
            "type": "Element",
            "namespace": "",
        }
    )
    library_strategy: Optional[TypeLibraryStrategy] = field(
        default=None,
        metadata={
            "name": "LIBRARY_STRATEGY",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    library_source: Optional[TypeLibrarySource] = field(
        default=None,
        metadata={
            "name": "LIBRARY_SOURCE",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    library_selection: Optional[TypeLibrarySelection] = field(
        default=None,
        metadata={
            "name": "LIBRARY_SELECTION",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    library_layout: Optional["LibraryDescriptorType.LibraryLayout"] = field(
        default=None,
        metadata={
            "name": "LIBRARY_LAYOUT",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    targeted_loci: Optional["LibraryDescriptorType.TargetedLoci"] = field(
        default=None,
        metadata={
            "name": "TARGETED_LOCI",
            "type": "Element",
            "namespace": "",
        }
    )
    pooling_strategy: Optional[str] = field(
        default=None,
        metadata={
            "name": "POOLING_STRATEGY",
            "type": "Element",
            "namespace": "",
        }
    )
    library_construction_protocol: Optional[str] = field(
        default=None,
        metadata={
            "name": "LIBRARY_CONSTRUCTION_PROTOCOL",
            "type": "Element",
            "namespace": "",
        }
    )

    @dataclass
    class LibraryLayout:
        single: Optional[object] = field(
            default=None,
            metadata={
                "name": "SINGLE",
                "type": "Element",
                "namespace": "",
            }
        )
        paired: Optional["LibraryDescriptorType.LibraryLayout.Paired"] = field(
            default=None,
            metadata={
                "name": "PAIRED",
                "type": "Element",
                "namespace": "",
            }
        )

        @dataclass
        class Paired:
            nominal_length: Optional[int] = field(
                default=None,
                metadata={
                    "name": "NOMINAL_LENGTH",
                    "type": "Attribute",
                }
            )
            nominal_sdev: Optional[float] = field(
                default=None,
                metadata={
                    "name": "NOMINAL_SDEV",
                    "type": "Attribute",
                }
            )

    @dataclass
    class TargetedLoci:
        """
        Names the gene(s) or locus(loci) or other genomic feature(s) targeted
        by the sequence.
        """
        locus: List["LibraryDescriptorType.TargetedLoci.Locus"] = field(
            default_factory=list,
            metadata={
                "name": "LOCUS",
                "type": "Element",
                "namespace": "",
                "min_occurs": 1,
            }
        )

        @dataclass
        class Locus:
            """
            :ivar probe_set: Reference to an archived primer or probe
                set. Example: dbProbe
            :ivar locus_name:
            :ivar description: Submitter supplied description of
                alternate locus and auxiliary information.
            """
            probe_set: Optional[XrefType] = field(
                default=None,
                metadata={
                    "name": "PROBE_SET",
                    "type": "Element",
                    "namespace": "",
                }
            )
            locus_name: Optional[LocusLocusName] = field(
                default=None,
                metadata={
                    "type": "Attribute",
                }
            )
            description: Optional[str] = field(
                default=None,
                metadata={
                    "type": "Attribute",
                }
            )


@dataclass
class PoolMemberType(RefObjectType):
    """
    :ivar read_label:
    :ivar member_name: Label a sample within a scope of the pool
    :ivar proportion: Proportion of this sample (in percent) that was
        included in sample pool.
    """
    read_label: List["PoolMemberType.ReadLabel"] = field(
        default_factory=list,
        metadata={
            "name": "READ_LABEL",
            "type": "Element",
            "namespace": "",
        }
    )
    member_name: Optional[str] = field(
        default=None,
        metadata={
            "type": "Attribute",
        }
    )
    proportion: Optional[float] = field(
        default=None,
        metadata={
            "type": "Attribute",
        }
    )

    @dataclass
    class ReadLabel:
        """
        :ivar value:
        :ivar read_group_tag: Assignment of read_group_tag to decoded
            read
        """
        value: str = field(
            default="",
            metadata={
                "required": True,
            }
        )
        read_group_tag: Optional[str] = field(
            default=None,
            metadata={
                "type": "Attribute",
            }
        )


@dataclass
class SampleDescriptorType(RefObjectType):
    """
    :ivar pool: Identifies a list of group/pool/multiplex sample
        members.  This implies that this sample record is a group, pool,
        or multiplex, but it continues to receive its own accession and
        can be referenced by an experiment.  By default if no match to
        any of the listed members can be determined, then the default
        sample reference is used.
    """
    pool: Optional["SampleDescriptorType.Pool"] = field(
        default=None,
        metadata={
            "name": "POOL",
            "type": "Element",
            "namespace": "",
        }
    )

    @dataclass
    class Pool:
        """
        :ivar default_member: Reference to the sample that is used when
            read membership cannot be determined. A default member
            should be provided if there exists a possibility that some
            reads will be left over from barcode/MID resolution. A
            default member is not needed when defining a true pool
            (where individual samples are not distinguished in the
            reads), or the reads have been partitioned among the pool
            members (no leftovers).
        :ivar member: Reference to the sample as determined from
            barcode/MID resolution or read partition.
        """
        default_member: Optional[PoolMemberType] = field(
            default=None,
            metadata={
                "name": "DEFAULT_MEMBER",
                "type": "Element",
                "namespace": "",
            }
        )
        member: List[PoolMemberType] = field(
            default_factory=list,
            metadata={
                "name": "MEMBER",
                "type": "Element",
                "namespace": "",
                "min_occurs": 1,
            }
        )


@dataclass
class LibraryType:
    """
    :ivar design_description: Goal and setup of the individual library
        including library was constructed.
    :ivar sample_descriptor: Pick a sample to associate this experiment
        with. The sample may be an individual or a pool, depending on
        how it is specified.
    :ivar library_descriptor: The LIBRARY_DESCRIPTOR specifies the
        origin of the material being sequenced and any treatments that
        the material might have undergone that affect the sequencing
        result. This specification is needed even if the platform does
        not require a library construction step per se.
    :ivar spot_descriptor: The SPOT_DESCRIPTOR specifies how to decode
        the individual reads of interest from the monolithic spot
        sequence. The spot descriptor contains aspects of the
        experimental design, platform, and processing information. There
        will be two methods of specification: one will be an index into
        a table of typical decodings, the other being an exact
        specification. This construct is needed for loading data and for
        interpreting the loaded runs. It can be omitted if the loader
        can infer read layout (from multiple input files or from one
        input files).
    """
    design_description: Optional[str] = field(
        default=None,
        metadata={
            "name": "DESIGN_DESCRIPTION",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    sample_descriptor: Optional[SampleDescriptorType] = field(
        default=None,
        metadata={
            "name": "SAMPLE_DESCRIPTOR",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    library_descriptor: Optional[LibraryDescriptorType] = field(
        default=None,
        metadata={
            "name": "LIBRARY_DESCRIPTOR",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    spot_descriptor: Optional[SpotDescriptorType] = field(
        default=None,
        metadata={
            "name": "SPOT_DESCRIPTOR",
            "type": "Element",
            "namespace": "",
        }
    )


@dataclass
class ExperimentType(ObjectType):
    """An Experiment specifies of what will be sequenced and how the sequencing
    will be performed.

    It does not contain results. An Experiment is composed of a design,
    a platform selection, and processing parameters.

    :ivar title: Short text that can be used to call out experiment
        records in searches or in displays. This element is technically
        optional but should be used for all new records.
    :ivar study_ref: Identifies the parent study.
    :ivar design: The library design including library properties,
        layout, protocol, targeting information, and spot and gap
        descriptors.
    :ivar platform: The PLATFORM record selects which sequencing
        platform and platform-specific runtime parameters. This will be
        determined by the Center.
    :ivar processing:
    :ivar experiment_links: Links to resources related to this
        experiment or experiment set (publication, datasets, online
        databases).
    :ivar experiment_attributes: Properties and attributes of the
        experiment.  These can be entered as free-form tag-value pairs.
    """
    title: Optional[str] = field(
        default=None,
        metadata={
            "name": "TITLE",
            "type": "Element",
            "namespace": "",
        }
    )
    study_ref: Optional[RefObjectType] = field(
        default=None,
        metadata={
            "name": "STUDY_REF",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    design: Optional[LibraryType] = field(
        default=None,
        metadata={
            "name": "DESIGN",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    platform: Optional[PlatformType] = field(
        default=None,
        metadata={
            "name": "PLATFORM",
            "type": "Element",
            "namespace": "",
            "required": True,
        }
    )
    processing: Optional[ProcessingType] = field(
        default=None,
        metadata={
            "name": "PROCESSING",
            "type": "Element",
            "namespace": "",
        }
    )
    experiment_links: Optional["ExperimentType.ExperimentLinks"] = field(
        default=None,
        metadata={
            "name": "EXPERIMENT_LINKS",
            "type": "Element",
            "namespace": "",
        }
    )
    experiment_attributes: Optional["ExperimentType.ExperimentAttributes"] = field(
        default=None,
        metadata={
            "name": "EXPERIMENT_ATTRIBUTES",
            "type": "Element",
            "namespace": "",
        }
    )

    @dataclass
    class ExperimentLinks:
        experiment_link: List[LinkType] = field(
            default_factory=list,
            metadata={
                "name": "EXPERIMENT_LINK",
                "type": "Element",
                "namespace": "",
                "min_occurs": 1,
            }
        )

    @dataclass
    class ExperimentAttributes:
        experiment_attribute: List[AttributeType] = field(
            default_factory=list,
            metadata={
                "name": "EXPERIMENT_ATTRIBUTE",
                "type": "Element",
                "namespace": "",
                "min_occurs": 1,
            }
        )


@dataclass
class Experiment(ExperimentType):
    class Meta:
        name = "EXPERIMENT"


@dataclass
class ExperimentSetType:
    experiment: List[ExperimentType] = field(
        default_factory=list,
        metadata={
            "name": "EXPERIMENT",
            "type": "Element",
            "namespace": "",
            "min_occurs": 1,
        }
    )


@dataclass
class ExperimentSet(ExperimentSetType):
    """
    An EXPERMENT_SET is a container for a set of experiments and a common
    namespace.
    """
    class Meta:
        name = "EXPERIMENT_SET"
